/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterfacePackage;

import BusinessPackage.Business;
import BusinessPackage.Customer;
import BusinessPackage.CustomerDirectory;
import BusinessPackage.Market;
import BusinessPackage.Order;
import BusinessPackage.OrderItems;
import BusinessPackage.Product;
import BusinessPackage.Sales;
import BusinessPackage.Supplier;
import java.awt.CardLayout;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ragha
 */
public class SalesBookCustomerOrder extends javax.swing.JPanel {

    /**
     * Creates new form SalesBookCustomerOrder
     */
    Business b;
    private JPanel userContainer;
    private Customer customer;
    Order order;
    private  int actualTotla = 0;
    Sales sales;
    ArrayList<Order> orderArray = new ArrayList<Order>();
    ArrayList<Market> marketArray = new ArrayList<Market>();
    private static double commison = 0;

    public SalesBookCustomerOrder(JPanel userContainer, Business b, Customer customer, Sales sales) {
        initComponents();
        this.b = b;
        this.userContainer = userContainer;
        this.customer = customer;
        this.sales = sales;
        populateSupplierName();
       // refreshOrderTable();
        sales.setBaseCompensation(1000);
        order = new Order();
       popluateCustomerInfo();
    }

    public void popluateCustomerInfo() {
        custName.setText(customer.getFirstname() + " " + customer.getLastname());
        jLabel5.setText(customer.getAddress());
        String marketName = customer.getMarket().getMarketName();
        jLabel6.setText(marketName);
        contactNum.setText(String.valueOf(customer.getContactnumber()));
    }

    public void populateSupplierName() {
        for (Supplier supplier : b.getSupplierCatalog().getSupplierDirectory()) {

            comboboxcatalog.addItem(supplier);

        }

    }

    public void refreshOrderTable() {
        DefaultTableModel defaultTableModel = (DefaultTableModel) tblorderitems.getModel();
        defaultTableModel.setRowCount(0);
        for (OrderItems o : order.getOrderList()) {
            {

                Object[] row = new Object[5];
                row[0] = o.getProduct();
                row[1] = o.getProduct().getModelNum();
                row[2] = o.getActualPrice();

                defaultTableModel.addRow(row);

            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblprice = new javax.swing.JTable();
        addButton = new javax.swing.JButton();
        comboboxcatalog = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblorderitems = new javax.swing.JTable();
        txttotalprice = new javax.swing.JTextField();
        txtmycommission = new javax.swing.JTextField();
        btncancel = new javax.swing.JButton();
        submitButton = new javax.swing.JButton();
        jSpinner1 = new javax.swing.JSpinner();
        backButton = new javax.swing.JButton();
        actualPriceText = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        custName = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        contactNum = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setText("Customer Information Summary            Person Contact Information");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 858, -1));

        jLabel2.setText("Activity: Book Customer Order");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        tblprice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product ID", "Product Name", "Floor Price", "Cealing Price", "Target Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblprice);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, 561, 111));

        addButton.setText("Add To Cart");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        add(addButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 430, -1, -1));

        comboboxcatalog.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboboxcatalogItemStateChanged(evt);
            }
        });
        comboboxcatalog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxcatalogActionPerformed(evt);
            }
        });
        add(comboboxcatalog, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 300, 240, -1));

        jLabel3.setText("order items");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 490, -1, -1));

        tblorderitems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Product ID", "Product Name", "Actual Price"
            }
        ));
        jScrollPane2.setViewportView(tblorderitems);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 520, 560, 110));

        txttotalprice.setText("total price");
        add(txttotalprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 560, 140, -1));

        txtmycommission.setText("My Commission");
        txtmycommission.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmycommissionActionPerformed(evt);
            }
        });
        add(txtmycommission, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 290, 330, -1));

        btncancel.setText("cancel");
        add(btncancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 670, -1, -1));

        submitButton.setText("Submit Order");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        add(submitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 670, -1, -1));
        add(jSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 390, -1, -1));

        backButton.setText("Back<<");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, -1, -1));

        actualPriceText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualPriceTextActionPerformed(evt);
            }
        });
        add(actualPriceText, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 430, 130, -1));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 840, 160));

        custName.setText("Customer Name");
        add(custName, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 220, -1));

        jLabel6.setText("jLabel6");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 210, -1));

        contactNum.setText("jLabel8");
        add(contactNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 70, -1, -1));

        jLabel5.setText("jLabel5");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, -1, -1));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 850, 160));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setText("Commission");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 260, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void comboboxcatalogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxcatalogActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboboxcatalogActionPerformed

    private void txtmycommissionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmycommissionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmycommissionActionPerformed

    private void comboboxcatalogItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboboxcatalogItemStateChanged
        // TODO add your handling code here:

        DefaultTableModel defaultTableModel = (DefaultTableModel) tblprice.getModel();
        defaultTableModel.setRowCount(0);
        Supplier sup = (Supplier) comboboxcatalog.getSelectedItem();
        for (Product p : sup.getProductCatalog().getProductList()) {
            {

                Object[] row = new Object[5];
                row[0] = p;
                row[1] = p.getModelNum();
                row[2] = p.getFloorPrice();
                row[3] = p.getCeilPrice();
                row[4] = p.getPrice();

                defaultTableModel.addRow(row);

            }


    }//GEN-LAST:event_comboboxcatalogItemStateChanged
    }
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        int selectedRows = tblprice.getSelectedRow();
        int salesGiven = Integer.parseInt(actualPriceText.getText());
        if (Integer.parseInt(jSpinner1.getValue().toString()) <= 0) {
            JOptionPane.showMessageDialog(null, "Quantity cannot be less than or equal to zero", "Warning", JOptionPane.WARNING_MESSAGE);
            return;

        }
        if (selectedRows < 0) {
            JOptionPane.showMessageDialog(null, "Select any row from the table to add the product", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            int actualPrice = 0;
            Product product = (Product) tblprice.getValueAt(selectedRows, 0);
            if (customer.getMarket().getMarketName().equalsIgnoreCase("Student")) {
                if (salesGiven > product.getPrice()) {
                    JOptionPane.showMessageDialog(null, "Sales Price cannot be more than the Target Price ", "Warning", JOptionPane.WARNING_MESSAGE);
                    return;
                } else {
                    actualPrice = salesGiven;
                }

            } else {
                actualPrice = salesGiven;
            }
            actualTotla = actualTotla + product.getPrice() * Integer.parseInt(jSpinner1.getValue().toString());
            order.addOrderItem(product, Integer.parseInt(jSpinner1.getValue().toString()), actualPrice);
            order.setOrderStartDate(new Date());
            SimpleDateFormat sdf = new SimpleDateFormat("dd/M/yyyy");
            String dateString = "11/11/2017";
            try {
                Date date = sdf.parse(dateString);
                order.setOrderEndDate(date);
                order.setOrderStatus("Sales Approved");

            } catch (ParseException ex) {
                Logger.getLogger(SalesBookCustomerOrder.class.getName()).log(Level.SEVERE, null, ex);
            }

            refreshOrderTable();
        }
        txttotalprice.setText(String.valueOf(order.getOrderTotel()));

    }//GEN-LAST:event_addButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
double newRevenue=0;
double diff =0.0;
        if (actualTotla > order.getOrderTotel()) {
             diff = actualTotla- order.getOrderTotel();
            txtmycommission.setText("No Commision Loss of" + diff);
            diff = diff + diff * (10 / 100);
            sales.setCommision(0.0);
             newRevenue = newRevenue + sales.getBaseCompensation() - diff;
            sales.setBaseCompensation(newRevenue);
            sales.setRevenue(newRevenue);
            
        } else {
            
             diff=order.getOrderTotel()- actualTotla ;
            commison = Math.round((commison + (diff * (0.1))*100));
            txtmycommission.setText(String.valueOf(commison));
             newRevenue = newRevenue + sales.getBaseCompensation() + commison;
            sales.setCommision(commison);
            sales.setBaseCompensation(newRevenue);
            sales.setRevenue(newRevenue);
            String marketName =customer.getMarket().getMarketName();
      Market mFound = b.getMarketList().searchByName(marketName);
      if(mFound!=null)
      {
          mFound.setRevenue(diff);
      }
        }

        CustomerDirectory cusDir = sales.getCustomerDirectory();
        cusDir.addUser(customer);
        orderArray.add(order);
        customer.setOrderList(orderArray);
       
    }//GEN-LAST:event_submitButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userContainer.remove(this);

        CardLayout layout = (CardLayout) userContainer.getLayout();
        layout.previous(userContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void actualPriceTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualPriceTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_actualPriceTextActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField actualPriceText;
    private javax.swing.JButton addButton;
    private javax.swing.JButton backButton;
    private javax.swing.JButton btncancel;
    private javax.swing.JComboBox<Object> comboboxcatalog;
    private javax.swing.JLabel contactNum;
    private javax.swing.JLabel custName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JButton submitButton;
    private javax.swing.JTable tblorderitems;
    private javax.swing.JTable tblprice;
    private javax.swing.JTextField txtmycommission;
    private javax.swing.JTextField txttotalprice;
    // End of variables declaration//GEN-END:variables
}
